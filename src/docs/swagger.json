{
  "openapi": "3.0.0",
  "info": {
    "title": "Typescript API Starter",
    "description": "Typescript API Starter",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "local server"
    }
  ],
  "tags": [
    {
      "name": "users",
      "description": "Operations About Users"
    }
  ],
  "paths": {
    "/users/{userId}": {
      "get": {
        "tags": ["users"],
        "sumamry": "Returns a user by ID",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user to return",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "status code",
                      "example": 200
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "username": {
                          "type": "string",
                          "example": "writingapidocsisboring"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A user with the specified ID was not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "status code",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User does not exist"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
